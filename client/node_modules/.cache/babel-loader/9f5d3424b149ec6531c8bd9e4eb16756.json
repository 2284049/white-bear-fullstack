{"ast":null,"code":"import _defineProperty from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import AppTemplate from\"../ui/AppTemplate\";import{Link}from\"react-router-dom\";import saveIcon from\"../../icons/save.svg\";import toDisplayDate from\"date-fns/format\";// downloaded library date-fns\nimport classnames from\"classnames\";import{checkIsOver,MAX_CARD_CHARS,safelyParseJson}from\"../../utils/helpers\";import{connect}from\"react-redux\";import actions from\"../../store/actions\";import isEmpty from\"lodash/isEmpty\";import memoryCards from\"../../mock-data/memory-cards\";import without from\"lodash/without\";var memoryCard=memoryCards[3];var Edit=/*#__PURE__*/function(_React$Component){_inherits(Edit,_React$Component);var _super=_createSuper(Edit);function Edit(props){var _this;_classCallCheck(this,Edit);_this=_super.call(this,props);_this.state={answerText:memoryCard.answer,imageryText:memoryCard.imagery,isDisplayingDeleteButton:false};return _this;}_createClass(Edit,[{key:\"setImageryText\",value:function setImageryText(e){this.setState({imageryText:e.target.value});// set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n}},{key:\"setAnswerText\",value:function setAnswerText(e){this.setState({answerText:e.target.value});// set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n}},{key:\"updateState\",value:function updateState(e){var value=e.target.value;if(value===\"true\"||value===\"false\"){value=safelyParseJson(value);// \"true\" will turn into true\n}this.setState(_defineProperty({},e.target.name,value));}// toggleDeleteButton() {\n//    this.setState({isDeleteChecked: !this.state.isDeleteChecked})\n// }\n},{key:\"checkHasInvalidCharCount\",value:function checkHasInvalidCharCount(){if(this.state.answerText.length>MAX_CARD_CHARS||this.state.answerText.length===0||this.state.imageryText.length>MAX_CARD_CHARS||this.state.imageryText.length===0){return true;}else return false;}},{key:\"deleteCard\",value:function deleteCard(){// TODO: delete from database\nif(this.props.editableCard.prevRoute===\"/review-answer\"){this.deleteCardFromStore();}if(this.props.editableCard.prevRoute===\"/all-cards\"){this.props.history.push(\"/all-cards\");}}},{key:\"deleteCardFromStore\",value:function deleteCardFromStore(){var deletedCard=this.props.editableCard.card;var cards=this.props.queue.cards;var filteredCards=without(cards,deletedCard);console.log(filteredCards);this.props.dispatch({type:actions.STORE_QUEUED_CARDS,payload:filteredCards});if(filteredCards[this.props.queue.index]===undefined){this.props.history.push(\"/review-empty\");}else{this.props.history.push(\"/review-imagery\");}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(AppTemplate,null,/*#__PURE__*/React.createElement(\"p\",{className:\"text-center lead text-muted my-2\"},\"Edit card\"),isEmpty(this.props.editableCard)===false&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body bg-primary lead\"},/*#__PURE__*/React.createElement(\"textarea\",{rows:\"4\",id:\"edit-imagery-input\",defaultValue:this.props.editableCard.card.imagery,onChange:function onChange(e){return _this2.setImageryText(e);}// whatever the user changes to the card, it fires to update the state\n}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body bg-secondary lead\"},/*#__PURE__*/React.createElement(\"textarea\",{rows:\"4\",id:\"edit-answer-input\",defaultValue:this.props.editableCard.card.answer,onChange:function onChange(e){return _this2.setAnswerText(e);}}))),/*#__PURE__*/React.createElement(\"p\",{className:\"float-right mt-2 mb-5 text-muted\"},/*#__PURE__*/React.createElement(\"span\",{className:classnames({\"text-danger\":checkIsOver(this.state.imageryText,MAX_CARD_CHARS)})},\"Top: \",this.state.imageryText.length,\"/\",MAX_CARD_CHARS),\"\\xA0\\xA0\",/*#__PURE__*/React.createElement(\"span\",{className:classnames({\"text-danger\":checkIsOver(this.state.answerText,MAX_CARD_CHARS)})},\"Bottom: \",this.state.answerText.length,\"/\",MAX_CARD_CHARS)),/*#__PURE__*/React.createElement(\"div\",{className:\"clearfix\"}),/*#__PURE__*/React.createElement(Link,{to:this.props.editableCard.prevRoute,className:\"btn btn-link mt-1\"},\"Discard changes\"),/*#__PURE__*/React.createElement(Link,{to:this.props.editableCard.prevRoute,className:classnames(\"btn btn-primary btn-lg ml-4 float-right\",{disabled:this.checkHasInvalidCharCount()}),id:\"edit-save\"},/*#__PURE__*/React.createElement(\"img\",{src:saveIcon,width:\"20px\",alt:\"\",style:{marginBottom:\"3px\",marginRight:\"5px\",marginLeft:\"-1px\"}}),\"Save\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-center lead text-muted my-5\"},\"Card properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4\"},/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mt-1\"},\"Created on:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mt-1\"},\"Last attempt:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mt-1\"},\"Next attempt:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted mt-1\"},\"Consecutives:\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-8\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mt-1\"},toDisplayDate(this.props.editableCard.card.createdAt,\"MMM d, y\")),/*#__PURE__*/React.createElement(\"p\",{className:\"mt-1\"},toDisplayDate(this.props.editableCard.card.lastAttemptAt,\"MMM d, y\")),/*#__PURE__*/React.createElement(\"p\",{className:\"mt-1\"},toDisplayDate(this.props.editableCard.card.nextAttemptAt,\"MMM d, y\")),/*#__PURE__*/React.createElement(\"p\",{className:\"mt-1\"},this.props.editableCard.card.totalSuccessfulAttempts))),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox mt-5 mb-3\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"custom-control-input\",id:\"isDisplayingDeleteButton\",checked:this.state.isDisplayingDeleteButton//check the isAdvancedView object\n,name:\"isDisplayingDeleteButton\",value:!this.state.isDisplayingDeleteButton,onChange:function onChange(e){_this2.updateState(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label text-muted\",htmlFor:\"isDisplayingDeleteButton\"},\"Show delete button\")),this.state.isDisplayingDeleteButton&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-danger\",onClick:function onClick(){_this2.deleteCard();}},\"Delete this card\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null));}}]);return Edit;}(React.Component);function mapStateToProps(state){//global state\nreturn{editableCard:state.editableCard,queue:state.queue};}export default connect(mapStateToProps)(Edit);","map":{"version":3,"sources":["/Users/michellerohde/code/white-bear-fullstack/client/src/components/pages/Edit.js"],"names":["React","AppTemplate","Link","toDisplayDate","classnames","checkIsOver","MAX_CARD_CHARS","safelyParseJson","connect","actions","isEmpty","memoryCards","without","memoryCard","Edit","props","state","answerText","answer","imageryText","imagery","isDisplayingDeleteButton","e","setState","target","value","name","length","editableCard","prevRoute","deleteCardFromStore","history","push","deletedCard","card","cards","queue","filteredCards","console","log","dispatch","type","STORE_QUEUED_CARDS","payload","index","undefined","setImageryText","setAnswerText","disabled","checkHasInvalidCharCount","saveIcon","marginBottom","marginRight","marginLeft","createdAt","lastAttemptAt","nextAttemptAt","totalSuccessfulAttempts","updateState","deleteCard","Component","mapStateToProps"],"mappings":"80BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,OAASC,IAAT,KAAqB,kBAArB,C,2CAEA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAA6C;AAC7C,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OACGC,WADH,CAEGC,cAFH,CAGGC,eAHH,KAIO,qBAJP,CAKA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CAEA,GAAMC,CAAAA,UAAU,CAAGF,WAAW,CAAC,CAAD,CAA9B,C,GAEMG,CAAAA,I,wGACH,cAAYC,KAAZ,CAAmB,sCAChB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACVC,UAAU,CAAEJ,UAAU,CAACK,MADb,CAEVC,WAAW,CAAEN,UAAU,CAACO,OAFd,CAGVC,wBAAwB,CAAE,KAHhB,CAAb,CAFgB,aAOlB,C,uEAEcC,C,CAAG,CACf,KAAKC,QAAL,CAAc,CAAEJ,WAAW,CAAEG,CAAC,CAACE,MAAF,CAASC,KAAxB,CAAd,EAAgD;AAClD,C,oDAEaH,C,CAAG,CACd,KAAKC,QAAL,CAAc,CAAEN,UAAU,CAAEK,CAAC,CAACE,MAAF,CAASC,KAAvB,CAAd,EAA+C;AACjD,C,gDAEWH,C,CAAG,CACZ,GAAIG,CAAAA,KAAK,CAAGH,CAAC,CAACE,MAAF,CAASC,KAArB,CACA,GAAIA,KAAK,GAAK,MAAV,EAAoBA,KAAK,GAAK,OAAlC,CAA2C,CACxCA,KAAK,CAAGlB,eAAe,CAACkB,KAAD,CAAvB,CAAgC;AAClC,CACD,KAAKF,QAAL,oBAAiBD,CAAC,CAACE,MAAF,CAASE,IAA1B,CAAiCD,KAAjC,GACF,CAED;AACA;AACA;2EAE2B,CACxB,GACG,KAAKT,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,CAA+BrB,cAA/B,EACA,KAAKU,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,GAAiC,CADjC,EAEA,KAAKX,KAAL,CAAWG,WAAX,CAAuBQ,MAAvB,CAAgCrB,cAFhC,EAGA,KAAKU,KAAL,CAAWG,WAAX,CAAuBQ,MAAvB,GAAkC,CAJrC,CAKE,CACC,MAAO,KAAP,CACF,CAPD,IAOO,OAAO,MAAP,CACT,C,+CAEY,CACV;AACA,GAAI,KAAKZ,KAAL,CAAWa,YAAX,CAAwBC,SAAxB,GAAsC,gBAA1C,CAA4D,CACzD,KAAKC,mBAAL,GACF,CACD,GAAI,KAAKf,KAAL,CAAWa,YAAX,CAAwBC,SAAxB,GAAsC,YAA1C,CAAwD,CACrD,KAAKd,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,EACF,CACH,C,iEAEqB,CACnB,GAAMC,CAAAA,WAAW,CAAG,KAAKlB,KAAL,CAAWa,YAAX,CAAwBM,IAA5C,CACA,GAAMC,CAAAA,KAAK,CAAG,KAAKpB,KAAL,CAAWqB,KAAX,CAAiBD,KAA/B,CACA,GAAME,CAAAA,aAAa,CAAGzB,OAAO,CAACuB,KAAD,CAAQF,WAAR,CAA7B,CACAK,OAAO,CAACC,GAAR,CAAYF,aAAZ,EACA,KAAKtB,KAAL,CAAWyB,QAAX,CAAoB,CACjBC,IAAI,CAAEhC,OAAO,CAACiC,kBADG,CAEjBC,OAAO,CAAEN,aAFQ,CAApB,EAIA,GAAIA,aAAa,CAAC,KAAKtB,KAAL,CAAWqB,KAAX,CAAiBQ,KAAlB,CAAb,GAA0CC,SAA9C,CAAyD,CACtD,KAAK9B,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB,EACF,CAFD,IAEO,CACJ,KAAKjB,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB,EACF,CACH,C,uCAEQ,iBACN,mBACG,oBAAC,WAAD,mBACG,yBAAG,SAAS,CAAC,kCAAb,cADH,CAEItB,OAAO,CAAC,KAAKK,KAAL,CAAWa,YAAZ,CAAP,GAAqC,KAArC,eACE,qDACG,2BAAK,SAAS,CAAC,MAAf,eACG,2BAAK,SAAS,CAAC,2BAAf,eACG,gCACG,IAAI,CAAC,GADR,CAEG,EAAE,CAAC,oBAFN,CAGG,YAAY,CAAE,KAAKb,KAAL,CAAWa,YAAX,CAAwBM,IAAxB,CAA6Bd,OAH9C,CAIG,QAAQ,CAAE,kBAACE,CAAD,QAAO,CAAA,MAAI,CAACwB,cAAL,CAAoBxB,CAApB,CAAP,EAA+B;AAJ5C,EADH,CADH,CADH,cAWG,2BAAK,SAAS,CAAC,MAAf,eACG,2BAAK,SAAS,CAAC,6BAAf,eACG,gCACG,IAAI,CAAC,GADR,CAEG,EAAE,CAAC,mBAFN,CAGG,YAAY,CAAE,KAAKP,KAAL,CAAWa,YAAX,CAAwBM,IAAxB,CAA6BhB,MAH9C,CAIG,QAAQ,CAAE,kBAACI,CAAD,QAAO,CAAA,MAAI,CAACyB,aAAL,CAAmBzB,CAAnB,CAAP,EAJb,EADH,CADH,CAXH,cAsBG,yBAAG,SAAS,CAAC,kCAAb,eACG,4BACG,SAAS,CAAElB,UAAU,CAAC,CACnB,cAAeC,WAAW,CACvB,KAAKW,KAAL,CAAWG,WADY,CAEvBb,cAFuB,CADP,CAAD,CADxB,UAQS,KAAKU,KAAL,CAAWG,WAAX,CAAuBQ,MARhC,KAQyCrB,cARzC,CADH,yBAYG,4BACG,SAAS,CAAEF,UAAU,CAAC,CACnB,cAAeC,WAAW,CACvB,KAAKW,KAAL,CAAWC,UADY,CAEvBX,cAFuB,CADP,CAAD,CADxB,aAQY,KAAKU,KAAL,CAAWC,UAAX,CAAsBU,MARlC,KAQ2CrB,cAR3C,CAZH,CAtBH,cA6CG,2BAAK,SAAS,CAAC,UAAf,EA7CH,cA+CG,oBAAC,IAAD,EACG,EAAE,CAAE,KAAKS,KAAL,CAAWa,YAAX,CAAwBC,SAD/B,CAEG,SAAS,CAAC,mBAFb,oBA/CH,cAqDG,oBAAC,IAAD,EACG,EAAE,CAAE,KAAKd,KAAL,CAAWa,YAAX,CAAwBC,SAD/B,CAEG,SAAS,CAAEzB,UAAU,CAClB,yCADkB,CAElB,CAAE4C,QAAQ,CAAE,KAAKC,wBAAL,EAAZ,CAFkB,CAFxB,CAMG,EAAE,CAAC,WANN,eAQG,2BACG,GAAG,CAAEC,QADR,CAEG,KAAK,CAAC,MAFT,CAGG,GAAG,CAAC,EAHP,CAIG,KAAK,CAAE,CACJC,YAAY,CAAE,KADV,CAEJC,WAAW,CAAE,KAFT,CAGJC,UAAU,CAAE,MAHR,CAJV,EARH,QArDH,cA0EG,yBAAG,SAAS,CAAC,kCAAb,oBA1EH,cA8EG,2BAAK,SAAS,CAAC,KAAf,eACG,2BAAK,SAAS,CAAC,OAAf,eACG,yBAAG,SAAS,CAAC,iBAAb,gBADH,cAEG,yBAAG,SAAS,CAAC,iBAAb,kBAFH,cAGG,yBAAG,SAAS,CAAC,iBAAb,kBAHH,cAIG,yBAAG,SAAS,CAAC,iBAAb,kBAJH,CADH,cAOG,2BAAK,SAAS,CAAC,OAAf,eACG,yBAAG,SAAS,CAAC,MAAb,EACIlD,aAAa,CACX,KAAKY,KAAL,CAAWa,YAAX,CAAwBM,IAAxB,CAA6BoB,SADlB,CAEX,UAFW,CADjB,CADH,cAOG,yBAAG,SAAS,CAAC,MAAb,EACInD,aAAa,CACX,KAAKY,KAAL,CAAWa,YAAX,CAAwBM,IAAxB,CAA6BqB,aADlB,CAEX,UAFW,CADjB,CAPH,cAaG,yBAAG,SAAS,CAAC,MAAb,EACIpD,aAAa,CACX,KAAKY,KAAL,CAAWa,YAAX,CAAwBM,IAAxB,CAA6BsB,aADlB,CAEX,UAFW,CADjB,CAbH,cAmBG,yBAAG,SAAS,CAAC,MAAb,EAEM,KAAKzC,KAAL,CAAWa,YAAX,CAAwBM,IAAxB,CACIuB,uBAHV,CAnBH,CAPH,CA9EH,cAiHG,2BAAK,SAAS,CAAC,0CAAf,eACG,6BACG,IAAI,CAAC,UADR,CAEG,SAAS,CAAC,sBAFb,CAGG,EAAE,CAAC,0BAHN,CAIG,OAAO,CAAE,KAAKzC,KAAL,CAAWK,wBAA0B;AAJjD,CAKG,IAAI,CAAC,0BALR,CAMG,KAAK,CAAE,CAAC,KAAKL,KAAL,CAAWK,wBANtB,CAOG,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACd,MAAI,CAACoC,WAAL,CAAiBpC,CAAjB,EACF,CATJ,EADH,cAaG,6BACG,SAAS,CAAC,iCADb,CAEG,OAAO,CAAC,0BAFX,uBAbH,CAjHH,CAqII,KAAKN,KAAL,CAAWK,wBAAX,eACE,8BACG,SAAS,CAAC,wBADb,CAEG,OAAO,CAAE,kBAAM,CACZ,MAAI,CAACsC,UAAL,GACF,CAJJ,qBAtIN,CAHN,cAqJG,8BArJH,cAsJG,8BAtJH,cAuJG,8BAvJH,cAwJG,8BAxJH,cAyJG,8BAzJH,CADH,CA6JF,C,kBAjOe3D,KAAK,CAAC4D,S,EAoOzB,QAASC,CAAAA,eAAT,CAAyB7C,KAAzB,CAAgC,CAC7B;AACA,MAAO,CACJY,YAAY,CAAEZ,KAAK,CAACY,YADhB,CAEJQ,KAAK,CAAEpB,KAAK,CAACoB,KAFT,CAAP,CAIF,CACD,cAAe5B,CAAAA,OAAO,CAACqD,eAAD,CAAP,CAAyB/C,IAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport saveIcon from \"../../icons/save.svg\";\nimport toDisplayDate from \"date-fns/format\"; // downloaded library date-fns\nimport classnames from \"classnames\";\nimport {\n   checkIsOver,\n   MAX_CARD_CHARS,\n   safelyParseJson,\n} from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport isEmpty from \"lodash/isEmpty\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport without from \"lodash/without\";\n\nconst memoryCard = memoryCards[3];\n\nclass Edit extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         answerText: memoryCard.answer,\n         imageryText: memoryCard.imagery,\n         isDisplayingDeleteButton: false,\n      };\n   }\n\n   setImageryText(e) {\n      this.setState({ imageryText: e.target.value }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n   }\n\n   setAnswerText(e) {\n      this.setState({ answerText: e.target.value }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n   }\n\n   updateState(e) {\n      let value = e.target.value;\n      if (value === \"true\" || value === \"false\") {\n         value = safelyParseJson(value); // \"true\" will turn into true\n      }\n      this.setState({ [e.target.name]: value });\n   }\n\n   // toggleDeleteButton() {\n   //    this.setState({isDeleteChecked: !this.state.isDeleteChecked})\n   // }\n\n   checkHasInvalidCharCount() {\n      if (\n         this.state.answerText.length > MAX_CARD_CHARS ||\n         this.state.answerText.length === 0 ||\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0\n      ) {\n         return true;\n      } else return false;\n   }\n\n   deleteCard() {\n      // TODO: delete from database\n      if (this.props.editableCard.prevRoute === \"/review-answer\") {\n         this.deleteCardFromStore();\n      }\n      if (this.props.editableCard.prevRoute === \"/all-cards\") {\n         this.props.history.push(\"/all-cards\");\n      }\n   }\n\n   deleteCardFromStore() {\n      const deletedCard = this.props.editableCard.card;\n      const cards = this.props.queue.cards;\n      const filteredCards = without(cards, deletedCard);\n      console.log(filteredCards);\n      this.props.dispatch({\n         type: actions.STORE_QUEUED_CARDS,\n         payload: filteredCards,\n      });\n      if (filteredCards[this.props.queue.index] === undefined) {\n         this.props.history.push(\"/review-empty\");\n      } else {\n         this.props.history.push(\"/review-imagery\");\n      }\n   }\n\n   render() {\n      return (\n         <AppTemplate>\n            <p className=\"text-center lead text-muted my-2\">Edit card</p>\n            {isEmpty(this.props.editableCard) === false && (\n               <>\n                  <div className=\"card\">\n                     <div className=\"card-body bg-primary lead\">\n                        <textarea\n                           rows=\"4\"\n                           id=\"edit-imagery-input\"\n                           defaultValue={this.props.editableCard.card.imagery}\n                           onChange={(e) => this.setImageryText(e)} // whatever the user changes to the card, it fires to update the state\n                        ></textarea>\n                     </div>\n                  </div>\n                  <div className=\"card\">\n                     <div className=\"card-body bg-secondary lead\">\n                        <textarea\n                           rows=\"4\"\n                           id=\"edit-answer-input\"\n                           defaultValue={this.props.editableCard.card.answer}\n                           onChange={(e) => this.setAnswerText(e)}\n                        ></textarea>\n                     </div>\n                  </div>\n\n                  <p className=\"float-right mt-2 mb-5 text-muted\">\n                     <span\n                        className={classnames({\n                           \"text-danger\": checkIsOver(\n                              this.state.imageryText,\n                              MAX_CARD_CHARS\n                           ),\n                        })}\n                     >\n                        Top: {this.state.imageryText.length}/{MAX_CARD_CHARS}\n                     </span>\n                     &nbsp;&nbsp;\n                     <span\n                        className={classnames({\n                           \"text-danger\": checkIsOver(\n                              this.state.answerText,\n                              MAX_CARD_CHARS\n                           ),\n                        })}\n                     >\n                        Bottom: {this.state.answerText.length}/{MAX_CARD_CHARS}\n                     </span>\n                  </p>\n                  <div className=\"clearfix\"></div>\n\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className=\"btn btn-link mt-1\"\n                  >\n                     Discard changes\n                  </Link>\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className={classnames(\n                        \"btn btn-primary btn-lg ml-4 float-right\",\n                        { disabled: this.checkHasInvalidCharCount() }\n                     )}\n                     id=\"edit-save\"\n                  >\n                     <img\n                        src={saveIcon}\n                        width=\"20px\"\n                        alt=\"\"\n                        style={{\n                           marginBottom: \"3px\",\n                           marginRight: \"5px\",\n                           marginLeft: \"-1px\",\n                        }}\n                     />\n                     Save\n                  </Link>\n\n                  <p className=\"text-center lead text-muted my-5\">\n                     Card properties\n                  </p>\n\n                  <div className=\"row\">\n                     <div className=\"col-4\">\n                        <p className=\"text-muted mt-1\">Created on:</p>\n                        <p className=\"text-muted mt-1\">Last attempt:</p>\n                        <p className=\"text-muted mt-1\">Next attempt:</p>\n                        <p className=\"text-muted mt-1\">Consecutives:</p>\n                     </div>\n                     <div className=\"col-8\">\n                        <p className=\"mt-1\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.createdAt,\n                              \"MMM d, y\"\n                           )}\n                        </p>\n                        <p className=\"mt-1\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.lastAttemptAt,\n                              \"MMM d, y\"\n                           )}\n                        </p>\n                        <p className=\"mt-1\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.nextAttemptAt,\n                              \"MMM d, y\"\n                           )}\n                        </p>\n                        <p className=\"mt-1\">\n                           {\n                              this.props.editableCard.card\n                                 .totalSuccessfulAttempts\n                           }\n                        </p>\n                     </div>\n                  </div>\n\n                  <div className=\"custom-control custom-checkbox mt-5 mb-3\">\n                     <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id=\"isDisplayingDeleteButton\"\n                        checked={this.state.isDisplayingDeleteButton} //check the isAdvancedView object\n                        name=\"isDisplayingDeleteButton\"\n                        value={!this.state.isDisplayingDeleteButton}\n                        onChange={(e) => {\n                           this.updateState(e);\n                        }}\n                     />\n\n                     <label\n                        className=\"custom-control-label text-muted\"\n                        htmlFor=\"isDisplayingDeleteButton\"\n                     >\n                        Show delete button\n                     </label>\n                  </div>\n                  {this.state.isDisplayingDeleteButton && (\n                     <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => {\n                           this.deleteCard();\n                        }}\n                     >\n                        Delete this card\n                     </button>\n                  )}\n               </>\n            )}\n\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n         </AppTemplate>\n      );\n   }\n}\n\nfunction mapStateToProps(state) {\n   //global state\n   return {\n      editableCard: state.editableCard,\n      queue: state.queue,\n   };\n}\nexport default connect(mapStateToProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}