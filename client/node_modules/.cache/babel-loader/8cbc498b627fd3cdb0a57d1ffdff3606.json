{"ast":null,"code":"function checkIsOver(str,num){if(str.length>num)return true;else return false;}function safelyParseJson(value){try{// try do this first (try to parse the value)\nJSON.parse(value);}catch(_unused){// if error, return the value back unparsed\nreturn value;}// if we tried it and it worked, do more\nreturn JSON.parse(value);}var MAX_CARD_CHARS=240;// eslint-disable-next-line\nvar EMAIL_REGEX=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;export{checkIsOver,MAX_CARD_CHARS,EMAIL_REGEX,safelyParseJson};","map":{"version":3,"sources":["/Users/michellerohde/code/white-bear-fullstack/client/src/utils/helpers.js"],"names":["checkIsOver","str","num","length","safelyParseJson","value","JSON","parse","MAX_CARD_CHARS","EMAIL_REGEX"],"mappings":"AAAA,QAASA,CAAAA,WAAT,CAAqBC,GAArB,CAA0BC,GAA1B,CAA+B,CAC5B,GAAID,GAAG,CAACE,MAAJ,CAAaD,GAAjB,CAAsB,MAAO,KAAP,CAAtB,IACK,OAAO,MAAP,CACP,CAED,QAASE,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC7B,GAAI,CACD;AACAC,IAAI,CAACC,KAAL,CAAWF,KAAX,EACF,CAAC,cAAM,CACL;AACA,MAAOA,CAAAA,KAAP,CACF,CACD;AACA,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAP,CACF,CAED,GAAMG,CAAAA,cAAc,CAAG,GAAvB,CACA;AACA,GAAMC,CAAAA,WAAW,CAAG,yJAApB,CAEA,OAAST,WAAT,CAAsBQ,cAAtB,CAAsCC,WAAtC,CAAmDL,eAAnD","sourcesContent":["function checkIsOver(str, num) {\n   if (str.length > num) return true;\n   else return false;\n}\n\nfunction safelyParseJson(value) {\n   try {\n      // try do this first (try to parse the value)\n      JSON.parse(value);\n   } catch {\n      // if error, return the value back unparsed\n      return value;\n   }\n   // if we tried it and it worked, do more\n   return JSON.parse(value);\n}\n\nconst MAX_CARD_CHARS = 240;\n// eslint-disable-next-line\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport { checkIsOver, MAX_CARD_CHARS, EMAIL_REGEX, safelyParseJson };\n"]},"metadata":{},"sourceType":"module"}