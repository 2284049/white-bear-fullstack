{"ast":null,"code":"import _regeneratorRuntime from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/michellerohde/code/white-bear-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import classnames from\"classnames\";import hash from\"object-hash\";import{v4 as getUuid}from\"uuid\";import{withRouter}from\"react-router-dom\";import{EMAIL_REGEX}from\"../../utils/helpers\";import axios from\"axios\";import actions from\"../../store/actions\";import{connect}from\"react-redux\";var LogIn=/*#__PURE__*/function(_React$Component){_inherits(LogIn,_React$Component);var _super=_createSuper(LogIn);// this function turned into a class will have a bunch of functions in it\nfunction LogIn(props){var _this;_classCallCheck(this,LogIn);_this=_super.call(this,props);_this.state={emailError:\"\",passwordError:\"\",hasEmailError:false,hasPasswordError:false};return _this;}_createClass(LogIn,[{key:\"setEmailState\",value:function(){var _setEmailState=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(emailInput){var lowerCasedEmail;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:lowerCasedEmail=emailInput.toLowerCase();// make their input lowercase\nif(emailInput===\"\")// if the email input is blank,\nthis.setState({emailError:\"Please enter your email address.\",// display this error\nhasEmailError:true// make the input box red with is-invalid class\n});else if(!EMAIL_REGEX.test(lowerCasedEmail)){// if email does not follow regex format,\nthis.setState({emailError:\"Please enter a valid email address.\",//display this error\nhasEmailError:true// make the input box red with is-invalid class\n});}else{// otherwise, we don't want an email error (empty string) and we want to set hasEmailError to false to remove is-invalid class\nthis.setState({emailError:\"\",hasEmailError:false});}case 2:case\"end\":return _context.stop();}}},_callee,this);}));function setEmailState(_x){return _setEmailState.apply(this,arguments);}return setEmailState;}()},{key:\"setPasswordState\",value:function(){var _setPasswordState=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(passwordInput){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(passwordInput===\"\"){this.setState({passwordError:\"Please enter your password.\",// display this error\nhasPasswordError:true// make the input box red with is-invalid class\n});}else{this.setState({passwordError:\"\",hasPasswordError:false});}case 1:case\"end\":return _context2.stop();}}},_callee2,this);}));function setPasswordState(_x2){return _setPasswordState.apply(this,arguments);}return setPasswordState;}()},{key:\"validateAndLogInUser\",value:function(){var _validateAndLogInUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _this2=this;var emailInput,passwordInput,user;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:emailInput=document.getElementById(\"login-email-input\").value;// get the user email input\n_context3.next=3;return this.setEmailState(emailInput);case 3:passwordInput=document.getElementById(\"login-password-input\").value;_context3.next=6;return this.setPasswordState(passwordInput,emailInput);case 6:if(this.state.hasEmailError===false&&this.state.hasPasswordError===false){user={id:getUuid(),email:emailInput,password:hash(passwordInput),loggedInAt:Date.now()};console.log(\"Created user object for POST: \",user);// mimics API response\naxios// WE WANT THE API CALL TO HAPPEN AFTER THEY'VE BEEN VALIDATED\n.get(\"https://raw.githubusercontent.com/2284049/white-bear-mpa/main/src/mock-data/user.json\").then(function(res){// handle success\nvar currentUser=res.data;console.log(currentUser);_this2.props.dispatch({// HAD TO HAVE \"THIS\" FOR PROPS ERROR TO GO AWAY\ntype:actions.UPDATE_CURRENT_USER,payload:res.data});}).catch(function(error){// handle error\n});// TO TAKE THE VALIDATED USER TO NEXT PAGE\n// First, put up top: import { withRouter } from \"react-router-dom\";\n// take out the export defult at top and put on bottom of page like this: export default withRouter(LogIn);\n// use this code to tell it which page to go to:\nthis.props.history.push(\"/create-answer\");}case 7:case\"end\":return _context3.stop();}}},_callee3,this);}));function validateAndLogInUser(){return _validateAndLogInUser.apply(this,arguments);}return validateAndLogInUser;}()},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 col-lg-5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card mt-8 mt-lg-0 ml-lg-8\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-dark\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Welcome back\"),/*#__PURE__*/React.createElement(\"p\",{className:\"font-sans-serif mt-3 mb-5\"},\"Log in with your email address and password.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"login-email-input\",className:\"text-muted lead font-sans-serif\"},\"Email address\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",className:classnames({\"form-control\":true,\"is-invalid\":this.state.emailError// is-invalid class will display when emailError state equals true\n}),id:\"login-email-input\"}),this.state.hasEmailError&&/*#__PURE__*/ // when the hasEmailError state is true\n// which means there is an error, display this:\nReact.createElement(\"p\",{className:\"text-danger\",id:\"login-email-error\"},this.state.emailError)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"login-password-input\",className:\"text-muted lead font-sans-serif\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",className:classnames({\"form-control\":true,\"is-invalid\":this.state.passwordError// is-invalid class will display when emailError state equals true\n}),id:\"login-password-input\"}),this.state.hasPasswordError&&/*#__PURE__*/React.createElement(\"p\",{className:\"text-danger\",id:\"login-password-error\"},this.state.passwordError)),/*#__PURE__*/React.createElement(\"button\",{type:\"password\",className:\"float-right btn btn-success btn-lg font-sans-serif\",onClick:function onClick(){_this3.validateAndLogInUser();}},\"Log in\")))));}}]);return LogIn;}(React.Component);function mapStateToProps(state){//global state\nreturn{};}export default withRouter(connect(mapStateToProps)(LogIn));","map":{"version":3,"sources":["/Users/michellerohde/code/white-bear-fullstack/client/src/components/ui/LogIn.js"],"names":["React","classnames","hash","v4","getUuid","withRouter","EMAIL_REGEX","axios","actions","connect","LogIn","props","state","emailError","passwordError","hasEmailError","hasPasswordError","emailInput","lowerCasedEmail","toLowerCase","setState","test","passwordInput","document","getElementById","value","setEmailState","setPasswordState","user","id","email","password","loggedInAt","Date","now","console","log","get","then","res","currentUser","data","dispatch","type","UPDATE_CURRENT_USER","payload","catch","error","history","push","validateAndLogInUser","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { withRouter } from \"react-router-dom\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport axios from \"axios\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass LogIn extends React.Component {\n   // this function turned into a class will have a bunch of functions in it\n   constructor(props) {\n      super(props);\n      this.state = {\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         hasPasswordError: false,\n      };\n   }\n\n   async setEmailState(emailInput) {\n      const lowerCasedEmail = emailInput.toLowerCase(); // make their input lowercase\n      if (emailInput === \"\")\n         // if the email input is blank,\n         this.setState({\n            emailError: \"Please enter your email address.\", // display this error\n            hasEmailError: true, // make the input box red with is-invalid class\n         });\n      else if (!EMAIL_REGEX.test(lowerCasedEmail)) {\n         // if email does not follow regex format,\n         this.setState({\n            emailError: \"Please enter a valid email address.\", //display this error\n            hasEmailError: true, // make the input box red with is-invalid class\n         });\n      } else {\n         // otherwise, we don't want an email error (empty string) and we want to set hasEmailError to false to remove is-invalid class\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n\n   async setPasswordState(passwordInput) {\n      if (passwordInput === \"\") {\n         this.setState({\n            passwordError: \"Please enter your password.\", // display this error\n            hasPasswordError: true, // make the input box red with is-invalid class\n         });\n      } else {\n         this.setState({ passwordError: \"\", hasPasswordError: false });\n      }\n   }\n\n   async validateAndLogInUser() {\n      const emailInput = document.getElementById(\"login-email-input\").value; // get the user email input\n      await this.setEmailState(emailInput);\n      const passwordInput = document.getElementById(\"login-password-input\")\n         .value;\n      await this.setPasswordState(passwordInput, emailInput);\n      if (\n         this.state.hasEmailError === false &&\n         this.state.hasPasswordError === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: emailInput,\n            password: hash(passwordInput),\n            loggedInAt: Date.now(),\n         };\n         console.log(\"Created user object for POST: \", user); // mimics API response\n         axios // WE WANT THE API CALL TO HAPPEN AFTER THEY'VE BEEN VALIDATED\n            .get(\n               \"https://raw.githubusercontent.com/2284049/white-bear-mpa/main/src/mock-data/user.json\"\n            )\n            .then((res) => {\n               // handle success\n               const currentUser = res.data;\n               console.log(currentUser);\n               this.props.dispatch({\n                  // HAD TO HAVE \"THIS\" FOR PROPS ERROR TO GO AWAY\n                  type: actions.UPDATE_CURRENT_USER,\n                  payload: res.data,\n               });\n            })\n            .catch((error) => {\n               // handle error\n            });\n         // TO TAKE THE VALIDATED USER TO NEXT PAGE\n         // First, put up top: import { withRouter } from \"react-router-dom\";\n         // take out the export defult at top and put on bottom of page like this: export default withRouter(LogIn);\n         // use this code to tell it which page to go to:\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n\n   render() {\n      return (\n         <>\n            <div className=\"col-12 col-lg-5\">\n               <div className=\"card mt-8 mt-lg-0 ml-lg-8\">\n                  <div className=\"card-body text-dark\">\n                     <h2>Welcome back</h2>\n                     <p className=\"font-sans-serif mt-3 mb-5\">\n                        Log in with your email address and password.\n                     </p>\n                     <div className=\"form-group\">\n                        <label\n                           htmlFor=\"login-email-input\"\n                           className=\"text-muted lead font-sans-serif\"\n                        >\n                           Email address\n                        </label>\n                        <input\n                           type=\"email\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"is-invalid\": this.state.emailError, // is-invalid class will display when emailError state equals true\n                           })}\n                           id=\"login-email-input\"\n                        />\n                        {this.state.hasEmailError && (\n                           // when the hasEmailError state is true\n                           // which means there is an error, display this:\n                           <p className=\"text-danger\" id=\"login-email-error\">\n                              {this.state.emailError}\n                           </p>\n                        )}\n                     </div>\n                     <div className=\"form-group\">\n                        <label\n                           htmlFor=\"login-password-input\"\n                           className=\"text-muted lead font-sans-serif\"\n                        >\n                           Password\n                        </label>\n                        <input\n                           type=\"email\"\n                           className={classnames({\n                              \"form-control\": true,\n                              \"is-invalid\": this.state.passwordError, // is-invalid class will display when emailError state equals true\n                           })}\n                           id=\"login-password-input\"\n                        />\n                        {this.state.hasPasswordError && (\n                           <p className=\"text-danger\" id=\"login-password-error\">\n                              {this.state.passwordError}\n                           </p>\n                        )}\n                     </div>\n                     <button\n                        type=\"password\"\n                        className=\"float-right btn btn-success btn-lg font-sans-serif\"\n                        onClick={() => {\n                           this.validateAndLogInUser();\n                        }}\n                     >\n                        Log in\n                     </button>\n                  </div>\n               </div>\n            </div>\n         </>\n      );\n   }\n}\n\nfunction mapStateToProps(state) {\n   //global state\n   return {};\n}\nexport default withRouter(connect(mapStateToProps)(LogIn));\n"]},"metadata":{},"sourceType":"module"}