{"ast":null,"code":"function checkIsOver(str, num) {\n  if (str.length > num) return true;else return false;\n}\n\nfunction safelyParseJson(value) {\n  try {\n    // try do this first (try to parse the value)\n    JSON.parse(value);\n  } catch {\n    // if error, return the value back unparsed\n    return value;\n  } // if we tried it and it worked, do more\n\n\n  return JSON.parse(value);\n}\n\nconst MAX_CARD_CHARS = 240; // eslint-disable-next-line\n\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport { checkIsOver, MAX_CARD_CHARS, EMAIL_REGEX, safelyParseJson };","map":{"version":3,"sources":["/Users/michellerohde/code/white-bear-fullstack/client/src/utils/helpers.js"],"names":["checkIsOver","str","num","length","safelyParseJson","value","JSON","parse","MAX_CARD_CHARS","EMAIL_REGEX"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAC5B,MAAID,GAAG,CAACE,MAAJ,GAAaD,GAAjB,EAAsB,OAAO,IAAP,CAAtB,KACK,OAAO,KAAP;AACP;;AAED,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC7B,MAAI;AACD;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWF,KAAX;AACF,GAHD,CAGE,MAAM;AACL;AACA,WAAOA,KAAP;AACF,GAP4B,CAQ7B;;;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAP;AACF;;AAED,MAAMG,cAAc,GAAG,GAAvB,C,CACA;;AACA,MAAMC,WAAW,GAAG,yJAApB;AAEA,SAAST,WAAT,EAAsBQ,cAAtB,EAAsCC,WAAtC,EAAmDL,eAAnD","sourcesContent":["function checkIsOver(str, num) {\n   if (str.length > num) return true;\n   else return false;\n}\n\nfunction safelyParseJson(value) {\n   try {\n      // try do this first (try to parse the value)\n      JSON.parse(value);\n   } catch {\n      // if error, return the value back unparsed\n      return value;\n   }\n   // if we tried it and it worked, do more\n   return JSON.parse(value);\n}\n\nconst MAX_CARD_CHARS = 240;\n// eslint-disable-next-line\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport { checkIsOver, MAX_CARD_CHARS, EMAIL_REGEX, safelyParseJson };\n"]},"metadata":{},"sourceType":"module"}