{"ast":null,"code":"var _jsxFileName = \"/Users/michellerohde/code/white-bear-fullstack/client/src/components/pages/CreateImagery.js\";\nimport React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport saveIcon from \"../../icons/save.svg\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nexport default class CreateImagery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageryText: \"\"\n    };\n  }\n\n  setImageryText(e) {\n    this.setState({\n      imageryText: e.target.value\n    }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n\n    console.log(e.target.value);\n  }\n\n  checkHasInvalidCharCount() {\n    if (this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center lead text-muted my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Add memorable imagery\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-primary lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"6\",\n      id: \"create-imagery-input\",\n      autoFocus: true,\n      defaultValue: \"\",\n      onChange: e => this.setImageryText(e) // whatever the user changes to the card, it fires to update the state\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-secondary lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }, \"One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could se\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right mt-2 mb-5 text-muted\",\n      id: \"imagery-characters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"imagery-char-count\",\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, this.state.imageryText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/create-answer\",\n      className: \"btn btn-link mt-1\",\n      id: \"back-to-answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Back to answer\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/create-answer\",\n      className: classnames(\"btn btn-primary btn-lg ml-4 float-right\", {\n        disabled: this.checkHasInvalidCharCount()\n      }),\n      id: \"save-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      width: \"20px\",\n      alt: \"\",\n      style: {\n        marginBottom: \"3px\",\n        marginRight: \"5px\",\n        marginLeft: \"-1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 16\n      }\n    }), \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/michellerohde/code/white-bear-fullstack/client/src/components/pages/CreateImagery.js"],"names":["React","AppTemplate","Link","classnames","checkIsOver","MAX_CARD_CHARS","CreateImagery","Component","constructor","props","state","imageryText","setImageryText","e","setState","target","value","console","log","checkHasInvalidCharCount","length","render","disabled","saveIcon","marginBottom","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport saveIcon from \"../../icons/save.svg\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\n\nexport default class CreateImagery extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         imageryText: \"\",\n      };\n   }\n\n   setImageryText(e) {\n      this.setState({ imageryText: e.target.value }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n      console.log(e.target.value);\n   }\n\n   checkHasInvalidCharCount() {\n      if (\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0\n      ) {\n         return true;\n      } else return false;\n   }\n\n   render() {\n      return (\n         <AppTemplate>\n            <p className=\"text-center lead text-muted my-2\">\n               Add memorable imagery\n            </p>\n\n            <div className=\"card\">\n               <div className=\"card-body bg-primary lead\">\n                  {/* <!-- We put in two different text areas \n                     for the mockup depending on screen size, \n                     so that 300 characters would show without \n                     having scroll bars. d-md-none and d-md-block-->\n              <!-- Autofocus is an attribute so the cursor is\n                 automatically blinking when the page loads. --> */}\n                  {/* <!-- Commenting the first textarea out, to focus on character counts */}\n\n                  <textarea\n                     rows=\"6\"\n                     id=\"create-imagery-input\"\n                     autoFocus={true}\n                     defaultValue=\"\"\n                     onChange={(e) => this.setImageryText(e)} // whatever the user changes to the card, it fires to update the state\n                  ></textarea>\n               </div>\n            </div>\n            <div className=\"card\">\n               <div className=\"card-body bg-secondary lead\">\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could se\n               </div>\n            </div>\n\n            <p\n               className=\"float-right mt-2 mb-5 text-muted\"\n               id=\"imagery-characters\"\n            >\n               <span\n                  id=\"imagery-char-count\"\n                  className={classnames({\n                     \"text-danger\": checkIsOver(\n                        this.state.imageryText,\n                        MAX_CARD_CHARS\n                     ),\n                  })}\n               >\n                  {this.state.imageryText.length}/{MAX_CARD_CHARS}\n               </span>\n            </p>\n\n            <div className=\"clearfix\"></div>\n\n            <Link\n               to=\"/create-answer\"\n               className=\"btn btn-link mt-1\"\n               id=\"back-to-answer\"\n            >\n               Back to answer\n            </Link>\n            <Link\n               to=\"/create-answer\"\n               className={classnames(\n                  \"btn btn-primary btn-lg ml-4 float-right\",\n                  {\n                     disabled: this.checkHasInvalidCharCount(),\n                  }\n               )}\n               id=\"save-card\"\n            >\n               <img\n                  src={saveIcon}\n                  width=\"20px\"\n                  alt=\"\"\n                  style={{\n                     marginBottom: \"3px\",\n                     marginRight: \"5px\",\n                     marginLeft: \"-1px\",\n                  }}\n               />\n               Save\n            </Link>\n         </AppTemplate>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}