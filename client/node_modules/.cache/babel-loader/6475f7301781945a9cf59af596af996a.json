{"ast":null,"code":"var _jsxFileName = \"/Users/michellerohde/code/white-bear-fullstack/client/src/components/pages/Edit.js\";\nimport React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport saveIcon from \"../../icons/save.svg\";\nimport toDisplayDate from \"date-fns/format\"; // downloaded library date-fns\n\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS, safelyParseJson } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport isEmpty from \"lodash/isEmpty\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport without from \"lodash/without\";\nconst memoryCard = memoryCards[3];\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n      isDisplayingDeleteButton: false\n    };\n  }\n\n  setImageryText(e) {\n    this.setState({\n      imageryText: e.target.value\n    }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n  }\n\n  setAnswerText(e) {\n    this.setState({\n      answerText: e.target.value\n    }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n  }\n\n  updateState(e) {\n    let value = e.target.value;\n\n    if (value === \"true\" || value === \"false\") {\n      value = safelyParseJson(value); // \"true\" will turn into true\n    }\n\n    this.setState({\n      [e.target.name]: value\n    });\n  } // toggleDeleteButton() {\n  //    this.setState({isDeleteChecked: !this.state.isDeleteChecked})\n  // }\n\n\n  checkHasInvalidCharCount() {\n    if (this.state.answerText.length > MAX_CARD_CHARS || this.state.answerText.length === 0 || this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  deleteCard() {\n    // TODO: delete from database\n    if (this.props.editableCard.prevRoute === \"/review-answer\") {\n      this.deleteCardFromStore();\n    }\n\n    if (this.props.editableCard.prevRoute === \"/all-cards\") {\n      this.props.history.push(\"/all-cards\");\n    }\n  }\n\n  deleteCardFromStore() {\n    const deletedCard = this.props.editableCard.card;\n    const cards = this.props.queue.cards;\n    const filteredCards = without(cards, deletedCard);\n    console.log(filteredCards);\n    this.props.dispatch({\n      type: actions.STORE_QUEUED_CARDS,\n      payload: filteredCards\n    });\n\n    if (filteredCards[this.props.queue.index] === undefined) {\n      this.props.history.push(\"/review-empty\");\n    } else {\n      this.props.history.push(\"/review-imagery\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center lead text-muted my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Edit card\"), isEmpty(this.props.editableCard) === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-primary lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"4\",\n      id: \"edit-imagery-input\",\n      defaultValue: this.props.editableCard.card.imagery,\n      onChange: e => this.setImageryText(e) // whatever the user changes to the card, it fires to update the state\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-secondary lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"4\",\n      id: \"edit-answer-input\",\n      defaultValue: this.props.editableCard.card.answer,\n      onChange: e => this.setAnswerText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right mt-2 mb-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }\n    }, \"Top: \", this.state.imageryText.length, \"/\", MAX_CARD_CHARS), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }\n    }, \"Bottom: \", this.state.answerText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: \"btn btn-link mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Discard changes\"), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: classnames(\"btn btn-primary btn-lg ml-4 float-right\", {\n        disabled: this.checkHasInvalidCharCount()\n      }),\n      id: \"edit-save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      width: \"20px\",\n      alt: \"\",\n      style: {\n        marginBottom: \"3px\",\n        marginRight: \"5px\",\n        marginLeft: \"-1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 22\n      }\n    }), \"Save\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center lead text-muted my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"Card properties\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \"Created on:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Last attempt:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"Next attempt:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Consecutives:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.createdAt, \"MMM d, y\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.lastAttemptAt, \"MMM d, y\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.nextAttemptAt, \"MMM d, y\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, this.props.editableCard.card.totalSuccessfulAttempts))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox mt-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"isDisplayingDeleteButton\",\n      checked: this.state.isDisplayingDeleteButton //check the isAdvancedView object\n      ,\n      name: \"isDisplayingDeleteButton\",\n      value: !this.state.isDisplayingDeleteButton,\n      onChange: e => {\n        this.updateState(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label text-muted\",\n      htmlFor: \"isDisplayingDeleteButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 22\n      }\n    }, \"Show delete button\")), this.state.isDisplayingDeleteButton && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger\",\n      onClick: () => {\n        this.deleteCard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 22\n      }\n    }, \"Delete this card\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  //global state\n  return {\n    editableCard: state.editableCard,\n    queue: state.queue\n  };\n}\n\nexport default connect(mapStateToProps)(Edit);","map":{"version":3,"sources":["/Users/michellerohde/code/white-bear-fullstack/client/src/components/pages/Edit.js"],"names":["React","AppTemplate","Link","toDisplayDate","classnames","checkIsOver","MAX_CARD_CHARS","safelyParseJson","connect","actions","isEmpty","memoryCards","without","memoryCard","Edit","Component","constructor","props","state","answerText","answer","imageryText","imagery","isDisplayingDeleteButton","setImageryText","e","setState","target","value","setAnswerText","updateState","name","checkHasInvalidCharCount","length","deleteCard","editableCard","prevRoute","deleteCardFromStore","history","push","deletedCard","card","cards","queue","filteredCards","console","log","dispatch","type","STORE_QUEUED_CARDS","payload","index","undefined","render","disabled","saveIcon","marginBottom","marginRight","marginLeft","createdAt","lastAttemptAt","nextAttemptAt","totalSuccessfulAttempts","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport { Link } from \"react-router-dom\";\nimport saveIcon from \"../../icons/save.svg\";\nimport toDisplayDate from \"date-fns/format\"; // downloaded library date-fns\nimport classnames from \"classnames\";\nimport {\n   checkIsOver,\n   MAX_CARD_CHARS,\n   safelyParseJson,\n} from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport isEmpty from \"lodash/isEmpty\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport without from \"lodash/without\";\n\nconst memoryCard = memoryCards[3];\n\nclass Edit extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         answerText: memoryCard.answer,\n         imageryText: memoryCard.imagery,\n         isDisplayingDeleteButton: false,\n      };\n   }\n\n   setImageryText(e) {\n      this.setState({ imageryText: e.target.value }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n   }\n\n   setAnswerText(e) {\n      this.setState({ answerText: e.target.value }); // set the state of imageryText to be whatever the user inputs in that field (e.target.value)\n   }\n\n   updateState(e) {\n      let value = e.target.value;\n      if (value === \"true\" || value === \"false\") {\n         value = safelyParseJson(value); // \"true\" will turn into true\n      }\n      this.setState({ [e.target.name]: value });\n   }\n\n   // toggleDeleteButton() {\n   //    this.setState({isDeleteChecked: !this.state.isDeleteChecked})\n   // }\n\n   checkHasInvalidCharCount() {\n      if (\n         this.state.answerText.length > MAX_CARD_CHARS ||\n         this.state.answerText.length === 0 ||\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0\n      ) {\n         return true;\n      } else return false;\n   }\n\n   deleteCard() {\n      // TODO: delete from database\n      if (this.props.editableCard.prevRoute === \"/review-answer\") {\n         this.deleteCardFromStore();\n      }\n      if (this.props.editableCard.prevRoute === \"/all-cards\") {\n         this.props.history.push(\"/all-cards\");\n      }\n   }\n\n   deleteCardFromStore() {\n      const deletedCard = this.props.editableCard.card;\n      const cards = this.props.queue.cards;\n      const filteredCards = without(cards, deletedCard);\n      console.log(filteredCards);\n      this.props.dispatch({\n         type: actions.STORE_QUEUED_CARDS,\n         payload: filteredCards,\n      });\n      if (filteredCards[this.props.queue.index] === undefined) {\n         this.props.history.push(\"/review-empty\");\n      } else {\n         this.props.history.push(\"/review-imagery\");\n      }\n   }\n\n   render() {\n      return (\n         <AppTemplate>\n            <p className=\"text-center lead text-muted my-2\">Edit card</p>\n            {isEmpty(this.props.editableCard) === false && (\n               <>\n                  <div className=\"card\">\n                     <div className=\"card-body bg-primary lead\">\n                        <textarea\n                           rows=\"4\"\n                           id=\"edit-imagery-input\"\n                           defaultValue={this.props.editableCard.card.imagery}\n                           onChange={(e) => this.setImageryText(e)} // whatever the user changes to the card, it fires to update the state\n                        ></textarea>\n                     </div>\n                  </div>\n                  <div className=\"card\">\n                     <div className=\"card-body bg-secondary lead\">\n                        <textarea\n                           rows=\"4\"\n                           id=\"edit-answer-input\"\n                           defaultValue={this.props.editableCard.card.answer}\n                           onChange={(e) => this.setAnswerText(e)}\n                        ></textarea>\n                     </div>\n                  </div>\n\n                  <p className=\"float-right mt-2 mb-5 text-muted\">\n                     <span\n                        className={classnames({\n                           \"text-danger\": checkIsOver(\n                              this.state.imageryText,\n                              MAX_CARD_CHARS\n                           ),\n                        })}\n                     >\n                        Top: {this.state.imageryText.length}/{MAX_CARD_CHARS}\n                     </span>\n                     &nbsp;&nbsp;\n                     <span\n                        className={classnames({\n                           \"text-danger\": checkIsOver(\n                              this.state.answerText,\n                              MAX_CARD_CHARS\n                           ),\n                        })}\n                     >\n                        Bottom: {this.state.answerText.length}/{MAX_CARD_CHARS}\n                     </span>\n                  </p>\n                  <div className=\"clearfix\"></div>\n\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className=\"btn btn-link mt-1\"\n                  >\n                     Discard changes\n                  </Link>\n                  <Link\n                     to={this.props.editableCard.prevRoute}\n                     className={classnames(\n                        \"btn btn-primary btn-lg ml-4 float-right\",\n                        { disabled: this.checkHasInvalidCharCount() }\n                     )}\n                     id=\"edit-save\"\n                  >\n                     <img\n                        src={saveIcon}\n                        width=\"20px\"\n                        alt=\"\"\n                        style={{\n                           marginBottom: \"3px\",\n                           marginRight: \"5px\",\n                           marginLeft: \"-1px\",\n                        }}\n                     />\n                     Save\n                  </Link>\n\n                  <p className=\"text-center lead text-muted my-5\">\n                     Card properties\n                  </p>\n\n                  <div className=\"row\">\n                     <div className=\"col-4\">\n                        <p className=\"text-muted mt-1\">Created on:</p>\n                        <p className=\"text-muted mt-1\">Last attempt:</p>\n                        <p className=\"text-muted mt-1\">Next attempt:</p>\n                        <p className=\"text-muted mt-1\">Consecutives:</p>\n                     </div>\n                     <div className=\"col-8\">\n                        <p className=\"mt-1\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.createdAt,\n                              \"MMM d, y\"\n                           )}\n                        </p>\n                        <p className=\"mt-1\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.lastAttemptAt,\n                              \"MMM d, y\"\n                           )}\n                        </p>\n                        <p className=\"mt-1\">\n                           {toDisplayDate(\n                              this.props.editableCard.card.nextAttemptAt,\n                              \"MMM d, y\"\n                           )}\n                        </p>\n                        <p className=\"mt-1\">\n                           {\n                              this.props.editableCard.card\n                                 .totalSuccessfulAttempts\n                           }\n                        </p>\n                     </div>\n                  </div>\n\n                  <div className=\"custom-control custom-checkbox mt-5 mb-3\">\n                     <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id=\"isDisplayingDeleteButton\"\n                        checked={this.state.isDisplayingDeleteButton} //check the isAdvancedView object\n                        name=\"isDisplayingDeleteButton\"\n                        value={!this.state.isDisplayingDeleteButton}\n                        onChange={(e) => {\n                           this.updateState(e);\n                        }}\n                     />\n\n                     <label\n                        className=\"custom-control-label text-muted\"\n                        htmlFor=\"isDisplayingDeleteButton\"\n                     >\n                        Show delete button\n                     </label>\n                  </div>\n                  {this.state.isDisplayingDeleteButton && (\n                     <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={() => {\n                           this.deleteCard();\n                        }}\n                     >\n                        Delete this card\n                     </button>\n                  )}\n               </>\n            )}\n\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n         </AppTemplate>\n      );\n   }\n}\n\nfunction mapStateToProps(state) {\n   //global state\n   return {\n      editableCard: state.editableCard,\n      queue: state.queue,\n   };\n}\nexport default connect(mapStateToProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}